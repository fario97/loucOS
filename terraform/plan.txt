[0m[1mdata.aws_vpc.default: Reading...[0m[0m
[0m[1mdata.aws_vpc.default: Read complete after 1s [id=vpc-04783a900a615ea07][0m
[0m[1mdata.aws_subnets.default: Reading...[0m[0m
[0m[1maws_default_security_group.default: Refreshing state... [id=sg-0ebab308f1be15887][0m
[0m[1mdata.aws_subnets.default: Read complete after 0s [id=eu-west-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_instance.jenkins[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "jenkins" {
      [32m+[0m[0m ami                                  = "ami-020cba7c55df1f615"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m enable_primary_ipv6                  = (known after apply)
      [32m+[0m[0m force_destroy                        = false
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m region                               = "eu-west-1"
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-0891ff927a28d3a13"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "testing-loucOS-Instance"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "testing-loucOS-Instance"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = <<-EOT
            #!/bin/bash
            sudo apt update -y
            sudo apt install openjdk-11-jdk -y
            wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
            echo "deb http://pkg.jenkins.io/debian-stable binary/" | sudo tee /etc/apt/sources.list.d/jenkins.list
            sudo apt update -y
            sudo apt install jenkins -y
            sudo systemctl start jenkins
            sudo systemctl enable jenkins
            sudo ufw allow 8080/tcp
            for i in $(seq 1 120); do
            if [ -s /var/lib/jenkins/secrets/initialAdminPassword ]; then
              PASS=$(cat /var/lib/jenkins/secrets/initialAdminPassword)
              # 1) Imprime al console output (visible con AWS CLI o en la consola EC2)
              echo "JENKINS_INITIAL_ADMIN_PASSWORD=$PASS" > /dev/console
              # 2) (Opcional) GuÃ¡rdala para leer por SSH
              echo "$PASS" > /home/ubuntu/jenkins_initial_password.txt
              chown ubuntu:ubuntu /home/ubuntu/jenkins_initial_password.txt
              chmod 600 /home/ubuntu/jenkins_initial_password.txt
              break
              fi
              sleep 5
              done
        EOT
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = [
          [32m+[0m[0m "sg-0ebab308f1be15887",
        ]

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device {
          [32m+[0m[0m delete_on_termination = true
          [32m+[0m[0m device_name           = (known after apply)
          [32m+[0m[0m encrypted             = true
          [32m+[0m[0m iops                  = (known after apply)
          [32m+[0m[0m kms_key_id            = (known after apply)
          [32m+[0m[0m tags_all              = (known after apply)
          [32m+[0m[0m throughput            = (known after apply)
          [32m+[0m[0m volume_id             = (known after apply)
          [32m+[0m[0m volume_size           = 10
          [32m+[0m[0m volume_type           = "gp3"
        }
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m instance_id = (known after apply)
  [32m+[0m[0m jenkins_url = (known after apply)
  [32m+[0m[0m public_ip   = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
